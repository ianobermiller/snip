@model Snip.Models.Snippet

@{ bool canEdit = false; }

@if (Model != null)
{
    ViewBag.Title = Model.Title.OrIfEmpty(Model.Id);
    canEdit = StringUtils.GetAliasFromQualifiedName(User.Identity.Name).EqualsI(Model.Creator);
}
else
{
    ViewBag.Title = "Snippet not found";
    <p>Snippet does not exist.</p>
    return;
}

<h2>@Model.GetDisplayName()</h2>

<p>
    @{ Html.RenderPartial(Mvc.Shared.Views._SnipInfo, Model); }
    [<a href="javascript:;" id="selectAll">select all</a>]
    @if (canEdit)
    {
        @:[@Html.ActionLink("edit", Mvc.Snippet.Edit(Model.Id))]
        @:[@Html.ActionLink("delete", Mvc.Snippet.Delete(Model.Id))]
    }
</p>

<pre class="highlight" style="display:none">
@if (Model.ShouldHighlight)
{
@:@Model.Content
}
else
{
    foreach (var line in Model.Content.Split('\n'))
    {
<span class="nocode">@line.Replace("\r", "")</span>
    }
}
</pre>

<p><small>Tip: you can select and copy text; don't worry about the line numbers, they won't show up.</small></p>

@section Scripts
{
    <script type="text/javascript" src="http://balupton.github.com/jquery-syntaxhighlighter/prettify/prettify.min.js"></script>
    <script type="text/javascript" src="http://balupton.github.com/jquery-syntaxhighlighter/scripts/jquery.syntaxhighlighter.js"></script>
    <script type="text/javascript">
        $(function () {

            $.SyntaxHighlighter.init({
                'theme': 'vs'
            });

            $("pre").show();

            $(".highlight").bind('copy', function (e) {
                var selectedHtml = document.selection.createRange().htmlText;
                var cleaned = selectedHtml.replace(/<\/li>/gi, "\n").replace(/<[^>]*>/g, "");

                replaceSelectedHtml(cleaned);
            });

            $('#selectAll').click(function () {
                var range = $('body').get()[0].createTextRange();
                range.moveToElementText($('.highlight').get()[0]);
                range.select();
            });

            function replaceSelectedHtml(newSelectedHtml) {
                var body = $('body');
                var newSelection = $("<pre>").css({
                    position: 'absolute',
                    left: '-10000px',
                    top: '-10000px'
                });

                var originalRange = document.selection.createRange();

                newSelection.html(newSelectedHtml);

                body.append(newSelection);

                var newRange = body.get()[0].createTextRange();
                newRange.moveToElementText(newSelection.get()[0]);
                newRange.select();

                setTimeout(function () {
                    newSelection.remove();
                    if (originalRange.text != '') {
                        originalRange.select();
                    }
                }, 0);
            }
        });
    </script>
}